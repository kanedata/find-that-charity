{
  "$schema": "http://json-schema.org/schema#",
  "$id": "https://reconciliation-api.github.io/specs/0.2/schemas/manifest.json",
  "type": "object",
  "description": "This validates a service manifest, describing the features supported by the endpoint.",
  "properties": {
    "versions": {
      "type": "array",
      "description": "The list of API versions supported by this service.",
      "items": {
        "type": "string"
      },
      "contains": {
        "enum": [
          "0.2"
        ]
      }
    },
    "name": {
      "type": "string",
      "description": "A human-readable name for the service or data source"
    },
    "identifierSpace": {
      "type": "string",
      "description": "A URI describing the entity identifiers used in this service"
    },
    "schemaSpace": {
      "type": "string",
      "description": "A URI describing the schema used in this service"
    },
    "documentation": {
      "type": "string",
      "description": "A URI which hosts documentation about this service"
    },
    "serviceVersion": {
      "type": "string",
      "description": "A string representing the version of the software which exposes this service"
    },
    "logo": {
      "type": "string",
      "description": "A URI to a square image which can be used as logo for this service"
    },
    "authentication": {
      "$ref": "#/definitions/securityDefinitions/additionalProperties"
    },
    "view": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A template to transform an entity identifier into the corresponding URI",
          "pattern": ".*\\{\\{id\\}\\}.*"
        }
      },
      "required": [
        "url"
      ]
    },
    "feature_view": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "A template to transform a matching feature identifier into the corresponding URI",
          "pattern": ".*\\{\\{id\\}\\}.*"
        }
      },
      "required": [
        "url"
      ]
    },
    "defaultTypes": {
      "type": "array",
      "description": "A list of default types that are considered good generic choices for reconciliation",
      "items": {
        "$ref": "type.json"
      },
      "uniqueItems": true
    },
    "suggest": {
      "type": "object",
      "description": "Settings for the suggest protocol, to auto-complete entities, properties and types",
      "definitions": {
        "service_definition": {
          "type": "object",
          "properties": {
            "service_url": {
              "type": "string"
            },
            "service_path": {
              "type": "string"
            },
            "flyout_service_url": {
              "type": "string"
            },
            "flyout_service_path": {
              "type": "string",
              "pattern": ".*\\$\\{id\\}.*"
            }
          },
          "required": []
        }
      },
      "properties": {
        "entity": {
          "$ref": "#/properties/suggest/definitions/service_definition"
        },
        "property": {
          "$ref": "#/properties/suggest/definitions/service_definition"
        },
        "type": {
          "$ref": "#/properties/suggest/definitions/service_definition"
        }
      }
    },
    "preview": {
      "type": "object",
      "description": "Settings for the preview protocol, for HTML previews of entities",
      "properties": {
        "url": {
          "type": "string",
          "pattern": ".*\\{\\{id\\}\\}.*",
          "description": "A URL pattern which transforms the entity ID into a preview URL for it"
        },
        "width": {
          "type": "integer",
          "description": "The width of the iframe where to include the HTML preview"
        },
        "height": {
          "type": "integer",
          "description": "The height of the iframe where to include the HTML preview"
        }
      },
      "required": [
        "url",
        "width",
        "height"
      ]
    },
    "extend": {
      "type": "object",
      "description": "Settings for the data extension protocol, to fetch property values",
      "properties": {
        "propose_properties": {
          "type": "object",
          "description": "Location of the endpoint to propose properties to fetch for a given type",
          "properties": {
            "service_url": {
              "type": "string"
            },
            "service_path": {
              "type": "string"
            }
          }
        },
        "property_settings": {
          "type": "array",
          "description": "Definition of the settings configurable by the user when fetching a property",
          "items": {
            "oneOf": [
              {
                "type": "object",
                "description": "Defines a numerical setting on a property",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "number"
                    ]
                  },
                  "default": {
                    "type": "number"
                  },
                  "label": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "help_text": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "label",
                  "name"
                ]
              },
              {
                "type": "object",
                "description": "Defines a string setting on a property",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "text"
                    ]
                  },
                  "default": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "help_text": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "label",
                  "name"
                ]
              },
              {
                "type": "object",
                "description": "Defines a boolean setting on a property",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "checkbox"
                    ]
                  },
                  "default": {
                    "type": "boolean"
                  },
                  "label": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "help_text": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "label",
                  "name"
                ]
              },
              {
                "type": "object",
                "description": "Defines a setting with a fixed set of choices",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "select"
                    ]
                  },
                  "default": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "help_text": {
                    "type": "string"
                  },
                  "choices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "value",
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "label",
                  "name",
                  "choices"
                ]
              }
            ]
          }
        }
      }
    }
  },
  "definitions": {
    "vendorExtension": {
      "description": "Any property starting with x- is valid.",
      "additionalProperties": true,
      "additionalItems": true
    },
    "oauth2Scopes": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "securityDefinitions": {
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "#/definitions/basicAuthenticationSecurity"
          },
          {
            "$ref": "#/definitions/apiKeySecurity"
          },
          {
            "$ref": "#/definitions/oauth2ImplicitSecurity"
          },
          {
            "$ref": "#/definitions/oauth2PasswordSecurity"
          },
          {
            "$ref": "#/definitions/oauth2ApplicationSecurity"
          },
          {
            "$ref": "#/definitions/oauth2AccessCodeSecurity"
          }
        ]
      }
    },
    "basicAuthenticationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "basic"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "apiKeySecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "name",
        "in"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "apiKey"
          ]
        },
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "header",
            "query"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2ImplicitSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "implicit"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2PasswordSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "password"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2ApplicationSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "application"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    },
    "oauth2AccessCodeSecurity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "flow",
        "authorizationUrl",
        "tokenUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flow": {
          "type": "string",
          "enum": [
            "accessCode"
          ]
        },
        "scopes": {
          "$ref": "#/definitions/oauth2Scopes"
        },
        "authorizationUrl": {
          "type": "string",
          "format": "uri"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {
          "$ref": "#/definitions/vendorExtension"
        }
      }
    }
  },
  "required": [
    "versions",
    "name",
    "identifierSpace",
    "schemaSpace"
  ]
}