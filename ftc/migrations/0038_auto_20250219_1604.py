# Generated by Django 5.0.4 on 2025-02-19 16:04

from django.db import migrations

SQLQUERIES = {
    "superhighways_london_organisations": """
CREATE OR REPLACE VIEW superhighways_london_organisations AS
WITH n_charity AS (
    SELECT registered_charity_number,
        ARRAY_AGG(charity_name) AS also_known_as
    FROM charity_ccewcharityothernames
    GROUP BY 1
), t AS (
    SELECT organisation_number, count(*) AS latest_trustees
    FROM charity_ccewcharitytrustee cc 
    GROUP BY 1
), main AS (
    SELECT 'GB-CHC-' || c.registered_charity_number AS organisation_id,
        c.registered_charity_number AS charity_number,
        c.charity_name AS organisation_name,
        'Registered Charity' AS organisation_type,
        c.charity_company_registration_number AS company_number,
        n_charity.also_known_as,
        c.charity_contact_postcode AS postcode,
        CASE WHEN c.charity_contact_web ILIKE 'http:%' THEN '' ELSE 'https://' END || c.charity_contact_web AS website,
        latest_income,
        latest_expenditure,
        pb.count_employees AS latest_employees,
        pa.count_volunteers AS latest_volunteers,
        t.latest_trustees,
        c.charity_registration_status AS registration_status,
        c.charity_reporting_status AS reporting_status,
        c.date_of_registration,
        c.date_of_removal,
        c.date_of_extract,
        c.charity_activities
    FROM charity_ccewcharity c
        LEFT OUTER JOIN n_charity ON c.registered_charity_number = n_charity.registered_charity_number
        LEFT OUTER JOIN charity_ccewcharityannualreturnhistory ar 
            ON ar.registered_charity_number = c.registered_charity_number
                AND ar.fin_period_end_date = c.latest_acc_fin_period_end_date 
        LEFT OUTER JOIN charity_ccewcharityarparta pa 
            ON pa.registered_charity_number = c.registered_charity_number
                AND pa.fin_period_end_date = c.latest_acc_fin_period_end_date 
        LEFT OUTER JOIN charity_ccewcharityarpartb pb 
            ON pb.registered_charity_number = c.registered_charity_number
                AND pb.fin_period_end_date = c.latest_acc_fin_period_end_date 
        LEFT OUTER JOIN t ON c.organisation_number = t.organisation_number
    WHERE c.linked_charity_number = 0
    UNION ALL
    SELECT o.org_id AS organisation_id,
        NULL AS charity_number,
        o.name AS organisation_name,
        o."organisationTypePrimary_id"  AS organisation_type,
        c."CompanyNumber" AS company_number,
        o."alternateName" AS also_known_as,
        o."postalCode" AS postcode,
        o."url" AS website,
        NULL AS latest_income,
        NULL AS latest_expenditure,
        NULL AS latest_employees,
        NULL AS latest_volunteers,
        NULL AS latest_trustees,
        c."CompanyStatus" AS registration_status,
        c."Accounts_AccountCategory" AS reporting_status,
        o."dateRegistered"  AS date_of_registration,
        o."dateRemoved" AS date_of_removal,
        o."dateModified"::date AS date_of_extract,
        NULL AS charity_activities
    FROM ftc_organisation o
        LEFT OUTER JOIN companies_company c
            ON o.org_id = 'GB-COH-' || c."CompanyNumber"
    WHERE o."organisationTypePrimary_id" IN (
        'community-interest-company',
        'community-amateur-sports-club'
    )
), l AS (
    SELECT DISTINCT ON (l.org_id ) 
        l.org_id AS organisation_id,
        ward."geoCode" AS ward_code,
        ward.name AS ward_name,
        la."geoCode" AS la_code,
        la.name AS la_name,
        rgn."geoCode" AS rgn_code,
        rgn.name AS rgn_name,
        uk_ctry."geoCode" AS uk_ctry_code,
        uk_ctry.name AS uk_ctry_name,
        (rgn."geoCode" IS NOT NULL) AND (rgn."geoCode" = 'E12000007') AS london
    FROM ftc_organisationlocation l
        LEFT OUTER JOIN geo_geolookup la
            ON l.geo_laua = la."geoCode"
        LEFT OUTER JOIN geo_geolookup rgn
            ON l.geo_rgn= rgn."geoCode"
        LEFT OUTER JOIN geo_geolookup uk_ctry
            ON l.geo_ctry= uk_ctry."geoCode"
        LEFT OUTER JOIN geo_geolookup ward
            ON l.geo_ward= ward."geoCode"
    WHERE (l.org_id ILIKE 'GB-CHC-%'
        OR l.org_id ILIKE 'GB-COH-%')
        AND l."locationType" = 'HQ'
    ORDER BY l.org_id
)
SELECT main.organisation_id,
    main.charity_number,
    main.organisation_name,
    main.organisation_type,
    main.company_number,
    main.also_known_as,
    main.postcode,
    main.website,
    main.latest_income,
    main.latest_expenditure,
    main.latest_employees,
    main.latest_volunteers,
    main.latest_trustees,
    main.registration_status,
    main.reporting_status,
    main.date_of_registration,
    main.date_of_removal,
    main.date_of_extract,
    l.la_code AS hq_la_code,
    l.la_name AS hq_la_name,
    l.rgn_code AS hq_rgn_code,
    l.rgn_name AS hq_rgn_name,
    l.uk_ctry_code AS hq_ctry_code,
    l.uk_ctry_name AS hq_ctry_name,
    l.london AS hq_london,
    l.ward_code AS hq_ward_code,
    l.ward_name AS hq_ward_name,
    main.charity_activities
FROM main 
    LEFT OUTER JOIN l 
        ON main.organisation_id = l.organisation_id
WHERE l.london
    """,
}


class Migration(migrations.Migration):
    dependencies = [
        ("ftc", "0037_auto_20250205_1501"),
    ]

    operations = [
        migrations.RunSQL(
            sql=sql,
            reverse_sql=f"DROP VIEW IF EXISTS {name};",
        )
        for name, sql in SQLQUERIES.items()
    ]
