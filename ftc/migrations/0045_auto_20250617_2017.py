# Generated by Django 5.2 on 2025-06-17 19:17

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("ftc", "0044_auto_20250609_1040"),
    ]

    operations = [
        migrations.RunSQL(
            "DROP MATERIALIZED VIEW IF EXISTS superhighways_london_organisations_view CASCADE;",
            "",
        ),
        migrations.RunSQL(
            """
            CREATE MATERIALIZED VIEW superhighways_london_organisations_view AS
            WITH n_charity AS (
                SELECT registered_charity_number,
                    ARRAY_AGG(charity_name) AS also_known_as
                FROM charity_ccewcharityothernames
                GROUP BY 1
            ), t AS (
                SELECT organisation_number, count(*) AS latest_trustees
                FROM charity_ccewcharitytrustee cc 
                GROUP BY 1
            ), main AS (
                SELECT 'GB-CHC-' || c.registered_charity_number AS organisation_id,
                    c.registered_charity_number AS charity_number,
                    c.charity_name AS organisation_name,
                    'Registered Charity' AS organisation_type,
                    c.charity_company_registration_number AS company_number,
                    n_charity.also_known_as,
                    c.charity_contact_postcode AS postcode,
                    CASE WHEN c.charity_contact_web ILIKE 'http:%' THEN '' ELSE 'https://' END || c.charity_contact_web AS website,
                    latest_income,
                    latest_expenditure,
                    pb.count_employees AS latest_employees,
                    pa.count_volunteers AS latest_volunteers,
                    t.latest_trustees,
                    c.charity_registration_status AS registration_status,
                    c.charity_reporting_status AS reporting_status,
                    c.date_of_registration,
                    c.date_of_removal,
                    c.date_of_extract,
                    c.charity_activities,
                    c.charity_has_land,
                    c.charity_is_cio
                FROM charity_ccewcharity c
                    LEFT OUTER JOIN n_charity ON c.registered_charity_number = n_charity.registered_charity_number
                    LEFT OUTER JOIN charity_ccewcharityannualreturnhistory ar 
                        ON ar.registered_charity_number = c.registered_charity_number
                            AND ar.fin_period_end_date = c.latest_acc_fin_period_end_date 
                    LEFT OUTER JOIN charity_ccewcharityarparta pa 
                        ON pa.registered_charity_number = c.registered_charity_number
                            AND pa.fin_period_end_date = c.latest_acc_fin_period_end_date 
                    LEFT OUTER JOIN charity_ccewcharityarpartb pb 
                        ON pb.registered_charity_number = c.registered_charity_number
                            AND pb.fin_period_end_date = c.latest_acc_fin_period_end_date 
                    LEFT OUTER JOIN t ON c.organisation_number = t.organisation_number
                WHERE c.linked_charity_number = 0
                UNION ALL
                SELECT o.org_id AS organisation_id,
                    NULL AS charity_number,
                    o.name AS organisation_name,
                    CASE WHEN o."organisationTypePrimary_id" = 'community-interest-company' THEN 'Community Interest Company'
                        WHEN o."organisationTypePrimary_id" = 'community-amateur-sports-club' THEN 'Community Amateur Sports Club'
                        WHEN o."organisationTypePrimary_id" = 'community-benefit-society' THEN 'Mutual: Community Benefit Society'
                        WHEN o."organisationTypePrimary_id" = 'working-mens-club' THEN 'Mutual: Working Mens Club'
                        WHEN o."organisationTypePrimary_id" = 'registered-society' THEN 'Mutual: Registered Society'
                        WHEN o."organisationTypePrimary_id" = 'co-operative-society' THEN 'Mutual: Co-operative Society'
                        WHEN 'gp-practice' = ANY(o."organisationType")  THEN 'GP Practice'
                        ELSE o."organisationTypePrimary_id" END AS organisation_type,
                    c."CompanyNumber" AS company_number,
                    o."alternateName" AS also_known_as,
                    o."postalCode" AS postcode,
                    o."url" AS website,
                    NULL AS latest_income,
                    NULL AS latest_expenditure,
                    NULL AS latest_employees,
                    NULL AS latest_volunteers,
                    NULL AS latest_trustees,
                    c."CompanyStatus" AS registration_status,
                    c."Accounts_AccountCategory" AS reporting_status,
                    o."dateRegistered"  AS date_of_registration,
                    o."dateRemoved" AS date_of_removal,
                    o."dateModified"::date AS date_of_extract,
                    NULL AS charity_activities,
                    NULL AS charity_has_land,
                    NULL AS charity_is_cio
                FROM ftc_organisation o
                    LEFT OUTER JOIN companies_company c
                        ON o.org_id = 'GB-COH-' || c."CompanyNumber"
                WHERE o."organisationTypePrimary_id" IN (
                    'community-interest-company',
                    'community-amateur-sports-club',
                    'community-benefit-society',
                    'working-mens-club',
                    'registered-society',
                    'co-operative-society'
                )
                    OR 'gp-practice' = ANY("organisationType")
            ), l AS (
                SELECT l.org_id AS organisation_id,
                    STRING_AGG(ward."geoCode", ',') FILTER (WHERE l."locationType" = 'HQ') AS ward_code,
                    STRING_AGG(ward.name, ',') FILTER (WHERE l."locationType" = 'HQ') AS ward_name,
                    STRING_AGG(la."geoCode", ',') FILTER (WHERE l."locationType" = 'HQ') AS la_code,
                    STRING_AGG(la.name, ',') FILTER (WHERE l."locationType" = 'HQ') AS la_name,
                    STRING_AGG(rgn."geoCode", ',') FILTER (WHERE l."locationType" = 'HQ') AS rgn_code,
                    STRING_AGG(rgn.name, ',') FILTER (WHERE l."locationType" = 'HQ') AS rgn_name,
                    STRING_AGG(uk_ctry."geoCode", ',') FILTER (WHERE l."locationType" = 'HQ') AS uk_ctry_code,
                    STRING_AGG(uk_ctry.name, ',') FILTER (WHERE l."locationType" = 'HQ') AS uk_ctry_name,
                    (COUNT(*) FILTER (WHERE rgn."geoCode" = 'E12000007' AND l."locationType" = 'HQ')) > 0 AS hq_london,
                    (COUNT(*) FILTER (WHERE rgn."geoCode" = 'E12000007')) > 0 AS london
                FROM ftc_organisationlocation l
                    LEFT OUTER JOIN geo_geolookup la
                        ON l.geo_laua = la."geoCode"
                    LEFT OUTER JOIN geo_geolookup rgn
                        ON l.geo_rgn= rgn."geoCode"
                    LEFT OUTER JOIN geo_geolookup uk_ctry
                        ON l.geo_ctry= uk_ctry."geoCode"
                    LEFT OUTER JOIN geo_geolookup ward
                        ON l.geo_ward= ward."geoCode"
                GROUP BY 1
                ORDER BY l.org_id
            ),
            cqc AS (
                SELECT DISTINCT ON (org_id) 
                    org_id,
                    id AS cqc_id,
                    sector,
                    directorate,
                    inspection_category
                FROM other_data_cqcprovider
                WHERE org_id IS NOT NULL
            )
            SELECT main.organisation_id,
                main.charity_number,
                main.organisation_name,
                main.organisation_type::text,
                main.company_number,
                main.also_known_as,
                main.postcode,
                main.website,
                main.latest_income,
                main.latest_expenditure,
                main.latest_employees,
                main.latest_volunteers,
                main.latest_trustees,
                main.registration_status,
                main.reporting_status,
                main.date_of_registration,
                main.date_of_removal,
                main.date_of_extract,
                l.la_code::varchar(200) AS hq_la_code,
                l.la_name::varchar(255) AS hq_la_name,
                l.rgn_code::varchar(200) AS hq_rgn_code,
                l.rgn_name::varchar(255) AS hq_rgn_name,
                l.uk_ctry_code::varchar(200) AS hq_ctry_code,
                l.uk_ctry_name::varchar(255) AS hq_ctry_name,
                l.hq_london AS hq_london,
                l.ward_code::varchar(200) AS hq_ward_code,
                l.ward_name::varchar(255) AS hq_ward_name,
                main.charity_activities,
                l.london AS any_london,
                cqc.inspection_category AS cqc_category,
                main.charity_has_land,
                main.charity_is_cio
            FROM main 
                LEFT OUTER JOIN l 
                    ON main.organisation_id = l.organisation_id
                LEFT OUTER JOIN cqc
                    ON main.organisation_id = cqc.org_id
            WHERE l.london;
            """,
            """""",
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE VIEW superhighways_london_organisations AS
            SELECT organisation_id,
                charity_number,
                organisation_name,
                organisation_type,
                company_number,
                also_known_as,
                postcode,
                website,
                latest_income,
                latest_expenditure,
                latest_employees,
                latest_volunteers,
                latest_trustees,
                registration_status,
                reporting_status,
                date_of_registration,
                date_of_removal,
                date_of_extract,
                hq_la_code,
                hq_la_name,
                hq_rgn_code,
                hq_rgn_name,
                hq_ctry_code,
                hq_ctry_name,
                hq_london,
                hq_ward_code,
                hq_ward_name,
                charity_activities,
                any_london,
                cqc_category,
                charity_has_land,
                charity_is_cio
            FROM superhighways_london_organisations_view;
            """,
            """""",
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE VIEW superhighways_area_of_operation AS
            SELECT l.org_id AS organisation_id,
                    CASE
                        WHEN l.org_id::text ~~* 'GB-CHC-%'::text THEN replace(l.org_id::text, 'GB-CHC-'::text, ''::text)::integer
                        ELSE NULL::integer
                    END AS charity_number,
                    CASE
                        WHEN l.org_id::text ~~* 'GB-COH-%'::text THEN replace(l.org_id::text, 'GB-COH-'::text, ''::text)
                        ELSE NULL::text
                    END AS company_number,
                l."locationType" AS location_type,
                la."geoCode" AS la_code,
                la.name AS la_name,
                rgn."geoCode" AS rgn_code,
                rgn.name AS rgn_name,
                uk_ctry."geoCode" AS uk_ctry_code,
                uk_ctry.name AS uk_ctry_name,
                ctry."geoCode" AS ctry_code,
                ctry.name AS ctry_name,
                rgn."geoCode" IS NOT NULL AND rgn."geoCode"::text = 'E12000007'::text AS london,
                ward."geoCode" AS ward_code,
                ward.name AS ward_name
            FROM ftc_organisationlocation l
                LEFT JOIN geo_geolookup la ON l.geo_laua::text = la."geoCode"::text
                LEFT JOIN geo_geolookup rgn ON l.geo_rgn::text = rgn."geoCode"::text
                LEFT JOIN geo_geolookup uk_ctry ON l.geo_ctry::text = uk_ctry."geoCode"::text
                LEFT JOIN geo_geolookup ctry ON l.geo_iso::text = ctry."geoCode"::text
                LEFT JOIN geo_geolookup ward ON l.geo_ward::text = ward."geoCode"::text
                INNER JOIN superhighways_london_organisations so ON so.organisation_id = l.org_id  
            ORDER BY l.org_id;
            """,
            """""",
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE VIEW superhighways_classification AS
            SELECT oc.org_id AS organisation_id,
                CASE
                    WHEN oc.org_id::text ~~* 'GB-CHC-%'::text THEN replace(oc.org_id::text, 'GB-CHC-'::text, ''::text)::integer
                    ELSE NULL::integer
                END AS charity_number,
                CASE
                    WHEN oc.org_id::text ~~* 'GB-COH-%'::text THEN replace(oc.org_id::text, 'GB-COH-'::text, ''::text)
                    ELSE NULL::text
                END AS company_number,
                v.title AS vocabulary,
                ve.code AS category_code,
                ve.title AS category_name
            FROM ftc_vocabulary v
                JOIN ftc_vocabularyentries ve ON v.id = ve.vocabulary_id
                JOIN ftc_organisationclassification oc ON ve.id = oc.vocabulary_id
                JOIN superhighways_london_organisations slo ON slo.organisation_id = oc.org_id
            ORDER BY oc.org_id, v.title, ve.code;
            """,
            """""",
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE VIEW superhighways_trustees AS
            SELECT 'GB-CHC-'::text || registered_charity_number AS organisation_id,
                registered_charity_number AS charity_number,
                trustee_id
            FROM charity_ccewcharitytrustee c
                JOIN superhighways_london_organisations slo ON slo.organisation_id = 'GB-CHC-' || c.registered_charity_number
            WHERE linked_charity_number = 0;
            """,
            """""",
        ),
    ]
